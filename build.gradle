apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'org.openjfx.javafxplugin'

version = '1.0.0'

javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
	sourceCompatibility = 11
	targetCompatibility = 11
	options.compilerArgs << '-Xlint:all'
}

repositories {
	mavenCentral()
	jcenter()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
dependencies {
	implementation fileTree(dir: 'lib',
			includes: ['**/*.jar'],
			excludes: ['**/*-sources.jar', '**/*-javadoc.jar'])

	implementation 'org.apache.pdfbox:pdfbox:2.0.22'
	implementation 'org.apache.pdfbox:fontbox:2.0.22'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.0'

	implementation 'org.kordamp.ikonli:ikonli-javafx:12.0.0'
	implementation 'org.kordamp.ikonli:ikonli-materialdesign-pack:12.0.0'

	// jpki-wrapper dependencies
	runtimeOnly 'org.bouncycastle:bcpkix-jdk15on:1.66'
	runtimeOnly 'net.java.dev.jna:jna:5.6.0'
	runtimeOnly 'net.java.dev.jna:jna-platform:5.6.0'

	// rombok
	 compileOnly "org.projectlombok:lombok:1.18.22"
	 annotationProcessor "org.projectlombok:lombok:1.18.22"
}

sourceSets.main.resources {
	srcDirs = ['src/main/resources', 'src/main/java' ]
}

application {
    mainClassName = 'net.osdn.jpki.pdf_signer.Main'
}

javafx {
    version = '11.0.2'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }
tasks.withType(GroovyCompile).each { it.groovyOptions.encoding = defaultEncoding }

defaultTasks 'clean', 'build', 'exewrap', 'run'

jar {
	manifest {
		attributes "Specification-Version": "${project.version}"
		attributes "Main-Class" : "net.osdn.jpki.pdf_signer.Main"
		attributes "Splashscreen-Image": "img/splash.png"
		attributes "Class-Path": sourceSets.main.runtimeClasspath.collect { "lib/$it.name" }.join(' ')
	}
	into('net/osdn/jpki/pdf_signer') {
		from("${projectDir}") {
			include('LICENSE.txt')
		}
	}
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.openjfx:javafx-plugin:0.0.12"
  }
}

task copyLibraries(type: Copy) {
	setGroup("build")
	setDescription("Copy dependency libraries.")
	from (sourceSets.main.runtimeClasspath) {
		include '*.jar'
	}
	from('lib') {
		include '*.dll'
	}
	into "${buildDir}/package/lib/"
}

task createJavaRuntime(type: Exec, dependsOn: ['jar', 'copyLibraries']) {
	setGroup("build")
	setDescription("Create Java Runtime.")
	workingDir "${buildDir}/package/"
	commandLine 'cmd', '/c', 'CreateJRE.bat', "${jar.archiveFile.get()}", "lib", "-server"
}

task exewrap(type: Exec, dependsOn: 'jar') {
	setGroup("build")
	setDescription('Assembles the executable.')
	executable "${projectDir}/etc/exewrap.exe"
	args "-A", "x64",
			"-g",
			"-t", "11",
			"-a", "-Xms256m -Xmx1024m",
			"-e", "SHARED",
			"-j", "${jar.archiveFile.get()}",
			"-i", "etc/ico/app.ico",
			"-o", "${buildDir}/package/${archivesBaseName}.exe",
			"-p", "JPKI ACCESSIBLE PDF SIGNER",
			"-d", "JPKI ACCESSIBLE PDF SIGNER",
			"-c", "(c)2021 yamahubuki, ACT Laboratory",
			"-V", "${version}",
			"-v", "${version}"
}

